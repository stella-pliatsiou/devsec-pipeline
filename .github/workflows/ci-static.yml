name: CI - Static Security

on:
  push:
    branches: [ "main" ]

jobs:
  static-analysis:
    runs-on: windows-latest
    steps:
      # --- Checkout repo ---
      - uses: actions/checkout@v4

      # --- Python setup ---
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install semgrep
        run: pip install semgrep

      # --- Semgrep scan (UTF-8 fix) ---
      - name: Run semgrep
        env:
          PYTHONUTF8: 1
        run: semgrep --config auto --output semgrep-results.sarif

      # --- Node.js setup ---
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Snyk
        run: npm install -g snyk

      - name: Install dependencies
        working-directory: vulnerable-app
        run: npm install

      - name: Debug workspace (optional)
        run: Get-ChildItem -Recurse | Select-Object FullName

      - name: Snyk auth
        working-directory: vulnerable-app
        shell: pwsh
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $env:SNYK_TOKEN

      - name: Snyk test
        working-directory: vulnerable-app
        shell: pwsh
        run: snyk test --json || true

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Generate Snyk HTML report
        run: snyk test --json | snyk-to-html -o snyk-report.html

      # --- TruffleHog scan ---
      - name: TruffleHog scan
        run: docker run --rm -v "${{ github.workspace }}:/src" trufflesecurity/trufflehog:latest filesystem --path /src || true

      # --- Trigger Jenkins dynamic scan ---
      - name: Trigger Jenkins job
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          JENKINS_TRIGGER_TOKEN: ${{ secrets.JENKINS_TRIGGER_TOKEN }}
        run:  curl -X POST "https://1c5b4955f164.ngrok-free.app/job/devsec-pipeline/build?token=***" --user "velti:1100f3e8fa586d715a4ec41b1bf1db6afe"



  dynamic-analysis:
    runs-on: windows-latest
    needs: static-analysis
    steps:
      - uses: actions/checkout@v4

      - name: Install Nmap on Windows
        run: choco install nmap -y

      # --- Nmap scan ---
      - name: Nmap Scan
        run: nmap -sV localhost || true

      # --- SQLMap scan ---
      - name: SQLMap Scan
        run: sqlmap -u "http://localhost/vulnerable-endpoint" --batch || true

      # --- OWASP ZAP Scan ---
      - name: ZAP Baseline Scan
        run: docker run -v "${{ github.workspace }}:/zap/wrk/:rw" owasp/zap2docker-stable zap-baseline.py -t http://localhost:8080 || true       