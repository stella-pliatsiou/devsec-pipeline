name: CI - Static Security

on:
  push:
    branches: [ "main" ]

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install semgrep
        run: pip install semgrep

      - name: Run semgrep
        run: semgrep --config auto --output semgrep-results.sarif || true

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Snyk
        run: npm install -g snyk

      - name: Snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk auth $SNYK_TOKEN
          snyk test

      - name: TruffleHog scan
        run: docker run --rm -v "${{ github.workspace }}:/src" trufflesecurity/trufflehog:latest filesystem --path /src || true

      - name: SonarQube scan
        if: env.SONAR_TOKEN != ''
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -sSLo sonar.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli.zip
          unzip sonar.zip -d scanner
          ./scanner/sonar-scanner-*/bin/sonar-scanner -Dsonar.projectKey=devsecops-demo -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN

      - name: Build & Push Docker image
        run: |
          docker build -t myorg/devsecops-demo:${{ github.sha }} .
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
          docker push myorg/devsecops-demo:${{ github.sha }}

      - name: Trigger Jenkins job
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
        run: |
          curl -X POST "$JENKINS_URL/job/devsecops-dynamic/build?token=GITHUB_TRIGGER_TOKEN" --user $JENKINS_USER:$JENKINS_API_TOKEN
